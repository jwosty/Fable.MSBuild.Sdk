<Project>
    <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == 'Fable'">
        <FableIntermediateFsproj Condition="'$(FableIntermediateFsproj)' == ''">$(BaseIntermediateOutputPath)\$(MSBuildProjectFile)</FableIntermediateFsproj>
        <_FableToolPkgBaseDir Condition="'$(FablePkgBaseDir)' == ''">$(MSBuildThisFileDirectory)..\tools\fable\</_FableToolPkgBaseDir>
        <FableToolDll Condition="'$(FableToolDll)' == ''">$(_FableToolPkgBaseDir)\tools\net6.0\any\fable.dll</FableToolDll>
        <FableCompilerLogFile Condition="'$(EnableFableCompilerLogFile)' == 'true'">$(BaseIntermediateOutputPath)\fable-log.txt</FableCompilerLogFile>
    </PropertyGroup>
    
    <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == 'Fable'">
        <FableTargetLanguage Condition="'$(FableTargetLanguage)' == ''">$(TargetPlatformIdentifier)</FableTargetLanguage>
        
        <AssetTargetFallback>$(AssetTargetFallback);netstandard2.1;netstandard2.0;net7.0;net6.0;net5.0</AssetTargetFallback>
        <_EnableDefaultWindowsPlatform>false</_EnableDefaultWindowsPlatform>
        <!-- Prevent the .NET SDK from attempting to include mscorlib.dll -->
        <NoStdLib Condition="'$(NoStdLib)' == ''">true</NoStdLib>
    </PropertyGroup>
    
    <Target Name="_CheckFableTargetLanguage" BeforeTargets="Restore;Build;Publish;Pack">
        <Error Condition="'$(FableTargetLanguage)' == ''" Text="Missing FableTargetLanguage property!" />
    </Target>
    
    <PropertyGroup Condition="'$(FableBundleCommand)' != ''">
        <FableRun Condition="'$(FableRun)' == '' and '$(FableBundleCommand.ToLowerInvariant())' != ''">$(FableBundleCommand)</FableRun>
    </PropertyGroup>
    
    <ItemGroup>
        <!-- Prevent the .NET SDK from trying to copy these -->
        <IntermediateAssembly Remove="@(IntermediateAssembly)" />
    </ItemGroup>
    
    <UsingTask TaskName="Fable.Sdk.Tasks.RedirectFablePackageTargets" AssemblyFile="$(_FableSdkTasksPath)" />
    <UsingTask TaskName="Fable.Sdk.Tasks.GenerateFableFsproj" AssemblyFile="$(_FableSdkTasksPath)" />
    <UsingTask TaskName="Fable.Sdk.Tasks.FableCompile" AssemblyFile="$(_FableSdkTasksPath)" />
    
    <Target Name="_MyCustomTarget" BeforeTargets="_CheckForUnsupportedTargetPlatformIdentifier">
        <Message Importance="high" Text="TargetFramework = $(TargetFramework)" />
        <Message Importance="high" Text="TargetFrameworkIdentifier = $(TargetFrameworkIdentifier)" />
        <Message Importance="high" Text="TargetFrameworkVersion = $(TargetFrameworkVersion)" />
        <Message Importance="high" Text="TargetPlatformIdentifier = $(TargetPlatformIdentifier)" />
        <Message Importance="high" Text="TargetPlatformVersion = $(TargetPlatformVersion)" />
        <Message Importance="high" Text="RuntimeIdentifier = $(RuntimeIdentifier)" />
    </Target>
    
    <Target Name="FableRestore" AfterTargets="Restore" Condition="'$(FableRestoreCommand)' != ''">
        <Exec Command="$(FableRestoreCommand)" />
    </Target>
    
    <Target
            Name="GenerateFableIntermediateFsproj"
            Inputs="@(CompileBefore);@(Compile);@(CompileAfter)"
            Outputs="$(FableIntermediateFsproj)">
        <GenerateFableFsproj
            Sources="@(CompileBefore);@(Compile);@(CompileAfter)"
            PackageReferences="@(PackageReference)"
            ProjectReferences="@(ProjectReference)"
            OutputFsproj="$(FableIntermediateFsproj)"
        />
    </Target>
    
    <PropertyGroup>
        <CoreCompileDependsOn>$(CoreCompileDependsOn);GenerateFableIntermediateFsproj</CoreCompileDependsOn>
    </PropertyGroup>
    
    <Target Name="CoreCompile" DependsOnTargets="$(CoreCompileDependsOn)">
        <Message Importance="high" Text="Starting Fable compilation..." />
        <!-- Append tmp to OutDir because the fsproj which Fable is compiling is one directory down (./obj/App.fsproj), and
             takes those relative links into account (<Compile Include="../SomeFile.fs" />) when resolving output paths -->
        <FableCompile
                InputFsproj="$(FableIntermediateFsproj)"
                FableToolDll="$(FableToolDll)"
                Language="$(FableTargetLanguage)"
                NoRestore="$(FableNoRestore)"
                OutDir="$(MSBuildProjectDirectory)\$(OutDir)\tmp"
                Run="$(FableRun)"
                RunFast="$(FableRunFast)"
                RunWatch="$(FableRunWatch)"
                CompilerLogFile="$(FableCompilerLogFile)"
                OtherFlags="$(OtherFlags)" >
            <Output TaskParameter="OutputFiles" PropertyName="FableOutputFiles" />
        </FableCompile>
    </Target>
</Project>